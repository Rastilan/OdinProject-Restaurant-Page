(()=>{var e={426:(e,t,n)=>{"use strict";n.d(t,{Z:()=>c});var r=n(537),i=n.n(r),o=n(645),a=n.n(o)()(i());a.push([e.id,'body {\n    padding: 0px;\n    margin: 0px;\n}\n#content {\n    display: grid;\n    grid-template-areas:\n    "header"\n    "container"\n    "footer";\n    grid-template-rows: 5vh 90vh 5vh;\n  }\n#header{\n      background: rgb(122, 18, 18);\n      grid-area: header;\n      display:flex;\n      flex-direction: row;\n      justify-content: center;\n      align-items: center;\n      gap:15px;\n      \n  }\n  #header div {\n      border: 2px solid black;\n      padding: 3px;\n  }\n#container{\n    background: lightgrey;\n    grid-area: container;\n}\n#innercontainer {\n    display: grid;\n    height: 100%;\n    grid-template-areas:\n    "left center right";\n    grid-template-columns: 25vw 50vw 25vw;\n  }\n#left{\nbackground: rgb(138, 138, 138);\n    }\n#center{\n    background: rgb(214, 214, 214);\n    height:90vh;\n    display:flex;\n    flex-direction: column;\n    justify-content: space-around;\n    text-align: center;\n}\n#right{\n    background: rgb(138, 138, 138);\n}\n\n\n\n\n#footer{\n    background: rgb(122, 18, 18);\n    grid-area: footer;\n    display:flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap:15px;\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,YAAY;IACZ,WAAW;AACf;AACA;IACI,aAAa;IACb;;;YAGQ;IACR,gCAAgC;EAClC;AACF;MACM,4BAA4B;MAC5B,iBAAiB;MACjB,YAAY;MACZ,mBAAmB;MACnB,uBAAuB;MACvB,mBAAmB;MACnB,QAAQ;;EAEZ;EACA;MACI,uBAAuB;MACvB,YAAY;EAChB;AACF;IACI,qBAAqB;IACrB,oBAAoB;AACxB;AACA;IACI,aAAa;IACb,YAAY;IACZ;uBACmB;IACnB,qCAAqC;EACvC;AACF;AACA,8BAA8B;IAC1B;AACJ;IACI,8BAA8B;IAC9B,WAAW;IACX,YAAY;IACZ,sBAAsB;IACtB,6BAA6B;IAC7B,kBAAkB;AACtB;AACA;IACI,8BAA8B;AAClC;;;;;AAKA;IACI,4BAA4B;IAC5B,iBAAiB;IACjB,YAAY;IACZ,mBAAmB;IACnB,uBAAuB;IACvB,mBAAmB;IACnB,QAAQ;AACZ",sourcesContent:['body {\n    padding: 0px;\n    margin: 0px;\n}\n#content {\n    display: grid;\n    grid-template-areas:\n    "header"\n    "container"\n    "footer";\n    grid-template-rows: 5vh 90vh 5vh;\n  }\n#header{\n      background: rgb(122, 18, 18);\n      grid-area: header;\n      display:flex;\n      flex-direction: row;\n      justify-content: center;\n      align-items: center;\n      gap:15px;\n      \n  }\n  #header div {\n      border: 2px solid black;\n      padding: 3px;\n  }\n#container{\n    background: lightgrey;\n    grid-area: container;\n}\n#innercontainer {\n    display: grid;\n    height: 100%;\n    grid-template-areas:\n    "left center right";\n    grid-template-columns: 25vw 50vw 25vw;\n  }\n#left{\nbackground: rgb(138, 138, 138);\n    }\n#center{\n    background: rgb(214, 214, 214);\n    height:90vh;\n    display:flex;\n    flex-direction: column;\n    justify-content: space-around;\n    text-align: center;\n}\n#right{\n    background: rgb(138, 138, 138);\n}\n\n\n\n\n#footer{\n    background: rgb(122, 18, 18);\n    grid-area: footer;\n    display:flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap:15px;\n}'],sourceRoot:""}]);const c=a},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,i,o){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var c=0;c<this.length;c++){var d=this[c][0];null!=d&&(a[d]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);r&&a[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),i&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=i):l[4]="".concat(i)),t.push(l))}},t}},537:e=>{"use strict";e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(i," */"),a=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(a).concat([o]).join("\n")}return[t].join("\n")}},379:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var o={},a=[],c=0;c<e.length;c++){var d=e[c],s=r.base?d[0]+r.base:d[0],l=o[s]||0,u="".concat(s," ").concat(l);o[s]=l+1;var A=n(u),m={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==A)t[A].references++,t[A].updater(m);else{var f=i(m,r);r.byIndex=c,t.splice(c,0,{identifier:u,updater:f,references:1})}a.push(u)}return a}function i(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,i){var o=r(e=e||[],i=i||{});return function(e){e=e||[];for(var a=0;a<o.length;a++){var c=n(o[a]);t[c].references--}for(var d=r(e,i),s=0;s<o.length;s++){var l=n(o[s]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}o=d}}},569:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{"use strict";e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var i=void 0!==n.layer;i&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,i&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},51:()=>{window.Clear=function(){document.getElementById("header").remove(),document.getElementById("container").remove(),document.getElementById("footer").remove()}},666:()=>{window.Home=function(){if(document.getElementById("rest-name"))return;const e=document.getElementById("content");let t=document.createElement("div");t.setAttribute("id","header"),e.insertBefore(t,e.children[0]);let n=document.createElement("div");n.setAttribute("id","home"),n.setAttribute("onclick","Clear();Home()"),n.innerHTML="HOME",t.insertBefore(n,t.children[0]);let r=document.createElement("div");r.setAttribute("id","menu"),r.setAttribute("onclick","Clear();Menu()"),r.innerHTML="MENU",t.insertBefore(r,t.children[1]);let i=document.createElement("div");i.setAttribute("id","contact"),i.setAttribute("onclick","Clear();Contact()"),i.innerHTML="CONTACT",t.insertBefore(i,t.children[2]);let o=document.createElement("div");o.setAttribute("id","container"),e.insertBefore(o,e.children[1]);let a=document.createElement("div");a.setAttribute("id","innercontainer"),o.insertBefore(a,o.children[0]);let c=document.createElement("div");c.setAttribute("id","left"),a.insertBefore(c,a.children[0]);let d=document.createElement("div");d.setAttribute("id","center"),a.insertBefore(d,a.children[1]);let s=document.createElement("div");s.setAttribute("id","rest-name"),s.innerHTML="Café Leblanc",d.insertBefore(s,d.children[0]);let l=document.createElement("div");l.setAttribute("id","rest-quote"),l.innerHTML="Leblanc is a café in Yongen-Jaya owned by Sojiro Sakura, famous for its signature coffee and curry.",d.insertBefore(l,d.children[1]);let u=document.createElement("div");u.setAttribute("id","rest-hours-container"),d.insertBefore(u,d.children[2]);let A=document.createElement("div");A.setAttribute("id","rest-hours-title"),A.innerHTML="Hours",u.insertBefore(A,u.children[0]);let m=document.createElement("div");m.setAttribute("id","rest-hours"),m.innerHTML="Sunday: 8am - 8pm      <br/> Monday: 6am - 6pm      <br/>Tuesday: 6am - 6pm     <br/>Wednesday: 6am - 6pm   <br/>Thursday: 6am - 10pm   <br/>Friday: 6am - 10pm     <br/> Saturday: 8am - 10pm",u.insertBefore(m,u.children[1]);let f=document.createElement("div");f.setAttribute("id","location"),f.innerHTML="Yongen-Jaya",d.insertBefore(f,d.children[3]);let p=document.createElement("div");p.setAttribute("id","right"),a.insertBefore(p,a.children[2]);let h=document.createElement("div");h.setAttribute("id","footer"),h.innerHTML="Webpage built using hopes and dreams... but mostly Javascript - This project is just a proof of concept for the code. The design is very basic due to this.",e.insertBefore(h,e.children[2])},Home()},83:()=>{window.Menu=function(){const e=document.getElementById("content");let t=document.createElement("div");t.setAttribute("id","header"),e.insertBefore(t,e.children[0]);let n=document.createElement("div");n.setAttribute("id","home"),n.setAttribute("onclick","Clear();Home()"),n.innerHTML="HOME",t.insertBefore(n,t.children[0]);let r=document.createElement("div");r.setAttribute("id","menu"),r.setAttribute("onclick","Clear();Menu()"),r.innerHTML="MENU",t.insertBefore(r,t.children[1]);let i=document.createElement("div");i.setAttribute("id","contact"),i.setAttribute("onclick","Clear();Contact()"),i.innerHTML="CONTACT",t.insertBefore(i,t.children[2]);let o=document.createElement("div");o.setAttribute("id","container"),e.insertBefore(o,e.children[1]);let a=document.createElement("div");a.setAttribute("id","innercontainer"),o.insertBefore(a,o.children[0]);let c=document.createElement("div");c.setAttribute("id","left"),a.insertBefore(c,a.children[0]);let d=document.createElement("div");d.setAttribute("id","center"),a.insertBefore(d,a.children[1]);let s=document.createElement("div");s.setAttribute("id","menu-title"),s.innerHTML="Menu",d.insertBefore(s,d.children[0]);let l=document.createElement("div");l.setAttribute("id","beverage-container"),d.insertBefore(l,d.children[1]);let u=document.createElement("div");u.setAttribute("id","beverage-title"),u.innerHTML="Beverages",l.insertBefore(u,l.children[0]);let A=document.createElement("div");A.setAttribute("id","beverage-list"),A.innerHTML="Coke $1.50 <br/> Sprite $1.50 <br/> Matcha $2.00 <br/> Boba Tea $3.00<br/>",l.insertBefore(A,l.children[1]);let m=document.createElement("div");m.setAttribute("id","food-container"),d.insertBefore(m,d.children[2]);let f=document.createElement("div");f.setAttribute("id","food-title"),f.innerHTML="Food",m.insertBefore(f,m.children[0]);let p=document.createElement("div");p.setAttribute("id","food-list"),p.innerHTML="Burger $1.50 <br/>Pizza $2.50<br/>",m.insertBefore(p,m.children[1]);let h=document.createElement("div");h.setAttribute("id","right"),a.insertBefore(h,a.children[2]);let b=document.createElement("div");b.setAttribute("id","footer"),b.innerHTML="Webpage built using hopes and dreams... but mostly Javascript - This project is just a proof of concept for the code. The design is very basic due to this.",e.insertBefore(b,e.children[2])}}},t={};function n(r){var i=t[r];if(void 0!==i)return i.exports;var o=t[r]={id:r,exports:{}};return e[r](o,o.exports,n),o.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";var e=n(379),t=n.n(e),r=n(795),i=n.n(r),o=n(569),a=n.n(o),c=n(565),d=n.n(c),s=n(216),l=n.n(s),u=n(589),A=n.n(u),m=n(426),f={};f.styleTagTransform=A(),f.setAttributes=d(),f.insert=a().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=l(),t()(m.Z,f),m.Z&&m.Z.locals&&m.Z.locals,n(666),n(83),n(51)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,