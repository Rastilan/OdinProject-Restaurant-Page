(()=>{var e={426:(e,n,t)=>{"use strict";t.d(n,{Z:()=>c});var r=t(537),i=t.n(r),o=t(645),a=t.n(o)()(i());a.push([e.id,'body {\n    padding: 0px;\n    margin: 0px;\n}\n#content {\n    display: grid;\n    grid-template-areas:\n    "header"\n    "container"\n    "footer";\n    grid-template-rows: 5vh 90vh 5vh;\n  }\n#header{\n      background: rgb(122, 18, 18);\n      grid-area: header;\n      display:flex;\n      flex-direction: row;\n      justify-content: center;\n      align-items: center;\n      gap:15px;\n      \n  }\n  #header div {\n      border: 2px solid black;\n      padding: 3px;\n  }\n#container{\n    background: lightgrey;\n    grid-area: container;\n}\n#innercontainer {\n    display: grid;\n    height: 100%;\n    grid-template-areas:\n    "left center right";\n    grid-template-columns: 25vw 50vw 25vw;\n  }\n#left{\nbackground: rgb(138, 138, 138);\n    }\n#center{\n    background: rgb(214, 214, 214);\n    height:90vh;\n    display:flex;\n    flex-direction: column;\n    justify-content: space-around;\n    text-align: center;\n}\n#right{\n    background: rgb(138, 138, 138);\n}\n\n\n\n\n#footer{\n    background: rgb(122, 18, 18);\n    grid-area: footer;\n    display:flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap:15px;\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,YAAY;IACZ,WAAW;AACf;AACA;IACI,aAAa;IACb;;;YAGQ;IACR,gCAAgC;EAClC;AACF;MACM,4BAA4B;MAC5B,iBAAiB;MACjB,YAAY;MACZ,mBAAmB;MACnB,uBAAuB;MACvB,mBAAmB;MACnB,QAAQ;;EAEZ;EACA;MACI,uBAAuB;MACvB,YAAY;EAChB;AACF;IACI,qBAAqB;IACrB,oBAAoB;AACxB;AACA;IACI,aAAa;IACb,YAAY;IACZ;uBACmB;IACnB,qCAAqC;EACvC;AACF;AACA,8BAA8B;IAC1B;AACJ;IACI,8BAA8B;IAC9B,WAAW;IACX,YAAY;IACZ,sBAAsB;IACtB,6BAA6B;IAC7B,kBAAkB;AACtB;AACA;IACI,8BAA8B;AAClC;;;;;AAKA;IACI,4BAA4B;IAC5B,iBAAiB;IACjB,YAAY;IACZ,mBAAmB;IACnB,uBAAuB;IACvB,mBAAmB;IACnB,QAAQ;AACZ",sourcesContent:['body {\n    padding: 0px;\n    margin: 0px;\n}\n#content {\n    display: grid;\n    grid-template-areas:\n    "header"\n    "container"\n    "footer";\n    grid-template-rows: 5vh 90vh 5vh;\n  }\n#header{\n      background: rgb(122, 18, 18);\n      grid-area: header;\n      display:flex;\n      flex-direction: row;\n      justify-content: center;\n      align-items: center;\n      gap:15px;\n      \n  }\n  #header div {\n      border: 2px solid black;\n      padding: 3px;\n  }\n#container{\n    background: lightgrey;\n    grid-area: container;\n}\n#innercontainer {\n    display: grid;\n    height: 100%;\n    grid-template-areas:\n    "left center right";\n    grid-template-columns: 25vw 50vw 25vw;\n  }\n#left{\nbackground: rgb(138, 138, 138);\n    }\n#center{\n    background: rgb(214, 214, 214);\n    height:90vh;\n    display:flex;\n    flex-direction: column;\n    justify-content: space-around;\n    text-align: center;\n}\n#right{\n    background: rgb(138, 138, 138);\n}\n\n\n\n\n#footer{\n    background: rgb(122, 18, 18);\n    grid-area: footer;\n    display:flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap:15px;\n}'],sourceRoot:""}]);const c=a},645:e=>{"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,i,o){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(a[s]=!0)}for(var d=0;d<e.length;d++){var u=[].concat(e[d]);r&&a[u[0]]||(void 0!==o&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=o),t&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=t):u[2]=t),i&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=i):u[4]="".concat(i)),n.push(u))}},n}},537:e=>{"use strict";e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(i," */"),a=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(a).concat([o]).join("\n")}return[n].join("\n")}},379:e=>{"use strict";var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},a=[],c=0;c<e.length;c++){var s=e[c],d=r.base?s[0]+r.base:s[0],u=o[d]||0,l="".concat(d," ").concat(u);o[d]=u+1;var A=t(l),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==A)n[A].references++,n[A].updater(p);else{var f=i(p,r);r.byIndex=c,n.splice(c,0,{identifier:l,updater:f,references:1})}a.push(l)}return a}function i(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,i){var o=r(e=e||[],i=i||{});return function(e){e=e||[];for(var a=0;a<o.length;a++){var c=t(o[a]);n[c].references--}for(var s=r(e,i),d=0;d<o.length;d++){var u=t(o[d]);0===n[u].references&&(n[u].updater(),n.splice(u,1))}o=s}}},569:e=>{"use strict";var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{"use strict";e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{"use strict";e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{"use strict";e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,i&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{"use strict";e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},666:()=>{window.Home=function(){if(document.getElementById("rest-name"))return;const e=document.getElementById("content");let n=document.createElement("div");n.setAttribute("id","header"),e.insertBefore(n,e.children[0]);let t=document.createElement("div");t.setAttribute("id","home"),t.setAttribute("onclick","Home()"),t.innerHTML="HOME",n.insertBefore(t,n.children[0]);let r=document.createElement("div");r.setAttribute("id","menu"),r.setAttribute("onclick","Menu()"),r.innerHTML="MENU",n.insertBefore(r,n.children[1]);let i=document.createElement("div");i.setAttribute("id","contact"),i.setAttribute("onclick","Contact()"),i.innerHTML="CONTACT",n.insertBefore(i,n.children[2]);let o=document.createElement("div");o.setAttribute("id","container"),e.insertBefore(o,e.children[1]);let a=document.createElement("div");a.setAttribute("id","innercontainer"),o.insertBefore(a,o.children[0]);let c=document.createElement("div");c.setAttribute("id","left"),a.insertBefore(c,a.children[0]);let s=document.createElement("div");s.setAttribute("id","center"),a.insertBefore(s,a.children[1]);let d=document.createElement("div");d.setAttribute("id","rest-name"),d.innerHTML="Café Leblanc",s.insertBefore(d,s.children[0]);let u=document.createElement("div");u.setAttribute("id","rest-quote"),u.innerHTML="Leblanc is a café in Yongen-Jaya owned by Sojiro Sakura, famous for its signature coffee and curry.",s.insertBefore(u,s.children[1]);let l=document.createElement("div");l.setAttribute("id","rest-hours-container"),s.insertBefore(l,s.children[2]);let A=document.createElement("div");A.setAttribute("id","rest-hours-title"),A.innerHTML="Hours",l.insertBefore(A,l.children[0]);let p=document.createElement("div");p.setAttribute("id","rest-hours"),p.innerHTML="Sunday: 8am - 8pm      <br/> Monday: 6am - 6pm      <br/>Tuesday: 6am - 6pm     <br/>Wednesday: 6am - 6pm   <br/>Thursday: 6am - 10pm   <br/>Friday: 6am - 10pm     <br/> Saturday: 8am - 10pm",l.insertBefore(p,l.children[1]);let f=document.createElement("div");f.setAttribute("id","location"),f.innerHTML="Yongen-Jaya",s.insertBefore(f,s.children[3]);let m=document.createElement("div");m.setAttribute("id","right"),a.insertBefore(m,a.children[2]);let g=document.createElement("div");g.setAttribute("id","footer"),g.innerHTML="Webpage built using hopes and dreams... but mostly Javascript - This project is just a proof of concept for the code. The design is very basic due to this.",e.insertBefore(g,e.children[2])},Home()}},n={};function t(r){var i=n[r];if(void 0!==i)return i.exports;var o=n[r]={id:r,exports:{}};return e[r](o,o.exports,t),o.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{"use strict";var e=t(379),n=t.n(e),r=t(795),i=t.n(r),o=t(569),a=t.n(o),c=t(565),s=t.n(c),d=t(216),u=t.n(d),l=t(589),A=t.n(l),p=t(426),f={};f.styleTagTransform=A(),f.setAttributes=s(),f.insert=a().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=u(),n()(p.Z,f),p.Z&&p.Z.locals&&p.Z.locals,t(666)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,